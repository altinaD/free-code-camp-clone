(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-ad0c80e4"],{"4f87":function(e,t,c){},"66d1":function(e,t,c){"use strict";c.r(t);var l=c("7a23"),a=c("d512"),b=c("db86"),j=c("85eb"),s=c("ae20"),n=c("7801"),O=c("567f"),i=c("8174");const u={class:"test-case"},o={class:"screen-divide"},d=Object(l["g"])("h1",null,"Use typeof to Check the Type of a Variable",-1),r=Object(l["i"])(" You can use "),p=Object(l["i"])("typeof"),f=Object(l["i"])(" to check the data structure, or type, of a variable. This is useful in debugging when working with multiple data types. If you think you're adding two numbers, but one is actually a string, the results can be unexpected. Type errors can lurk in calculations or function calls. Be careful especially when you're accessing and working with external data in the form of a JavaScript Object Notation (JSON) object. "),g=Object(l["i"])("Here are some examples using "),h=Object(l["i"])("typeof"),y=Object(l["i"])(":"),v=Object(l["g"])("span",{class:"black"},"console.",-1),_=Object(l["g"])("span",{class:"red"},"log",-1),k=Object(l["g"])("span",{class:"black"},"(",-1),w=Object(l["g"])("span",{class:"blue"},'typeof ""',-1),L=Object(l["g"])("span",{class:"black"},");",-1),m=Object(l["g"])("div",{class:"next"},null,-1),S=Object(l["g"])("span",{class:"black"},"console.",-1),x=Object(l["g"])("span",{class:"red"},"log",-1),J=Object(l["g"])("span",{class:"black"},"(",-1),N=Object(l["g"])("span",{class:"blue"},"typeof ",-1),I=Object(l["g"])("span",{class:"purple"},"0",-1),Y=Object(l["g"])("span",{class:"black"},");",-1),B=Object(l["g"])("div",{class:"next"},null,-1),T=Object(l["g"])("span",{class:"black"},"console.",-1),z=Object(l["g"])("span",{class:"red"},"log",-1),A=Object(l["g"])("span",{class:"black"},"(",-1),C=Object(l["g"])("span",{class:"blue"},"typeof ",-1),E=Object(l["g"])("span",{class:"black"},"[] );",-1),R=Object(l["g"])("div",{class:"next"},null,-1),U=Object(l["g"])("span",{class:"black"},"console.",-1),W=Object(l["g"])("span",{class:"red"},"log",-1),H=Object(l["g"])("span",{class:"black"},"(",-1),V=Object(l["g"])("span",{class:"blue"},"typeof ",-1),$=Object(l["g"])("span",{class:"black"},"{});",-1),q=Object(l["g"])("div",{class:"next"},null,-1),D=Object(l["i"])(" In order, the console will display the strings "),F=Object(l["i"])("string"),G=Object(l["i"])(", "),K=Object(l["i"])("number"),M=Object(l["i"])(", and "),P=Object(l["i"])("object"),Q=Object(l["i"])(". "),X=Object(l["i"])(" JavaScript recognizes seven primitive (immutable) data types: "),Z=Object(l["i"])("Boolean"),ee=Object(l["i"])(", "),te=Object(l["i"])("Null"),ce=Object(l["i"])(", "),le=Object(l["i"])("Undefined"),ae=Object(l["i"])(", "),be=Object(l["i"])("Number"),je=Object(l["i"])(", "),se=Object(l["i"])("String"),ne=Object(l["i"])(", Symbol (new with ES6), and "),Oe=Object(l["i"])("BigInt"),ie=Object(l["i"])(" (new with ES2020), and one type for mutable items: "),ue=Object(l["i"])("Object"),oe=Object(l["i"])(". Note that in JavaScript, arrays are technically a type of object. "),de=Object(l["g"])("hr",null,null,-1),re=Object(l["i"])(" Add two "),pe=Object(l["i"])("console.log()"),fe=Object(l["i"])(" statements to check the "),ge=Object(l["i"])("typeof"),he=Object(l["i"])(" each of the two variables "),ye=Object(l["i"])("seven"),ve=Object(l["i"])(" and "),_e=Object(l["i"])("three"),ke=Object(l["i"])(" in the code. "),we=Object(l["g"])("hr",null,null,-1),Le={class:"tests"},me={class:"test"},Se=Object(l["i"])(" Your code should use "),xe=Object(l["i"])("typeof"),Je=Object(l["i"])(" in two "),Ne=Object(l["i"])("console.log()"),Ie=Object(l["i"])(" statements to check the type of the variables. "),Ye={class:"test"},Be=Object(l["i"])(" Your code should use "),Te=Object(l["i"])("typeof"),ze=Object(l["i"])(" to check the type of the variable "),Ae=Object(l["i"])("seven"),Ce=Object(l["i"])(". "),Ee={class:"test"},Re=Object(l["i"])(" Your code should use "),Ue=Object(l["i"])("typeof"),We=Object(l["i"])(" to check the type of the variable "),He=Object(l["i"])("three"),Ve=Object(l["i"])(". ");var $e={setup(e){const t=Object(l["A"])();function c(e){let c=window.innerWidth-e-30;t.value.style.width=c+"px"}return(e,$e)=>(Object(l["v"])(),Object(l["f"])("div",u,[Object(l["j"])(b["a"]),Object(l["g"])("div",o,[Object(l["g"])("div",{class:"left-screen",ref_key:"leftScreenRef",ref:t},[Object(l["j"])(j["a"],null,{default:Object(l["L"])(()=>[d,Object(l["g"])("p",null,[r,Object(l["j"])(s["a"],null,{default:Object(l["L"])(()=>[p]),_:1}),f]),Object(l["g"])("p",null,[g,Object(l["j"])(s["a"],null,{default:Object(l["L"])(()=>[h]),_:1}),y]),Object(l["j"])(a["a"],null,{default:Object(l["L"])(()=>[v,_,k,w,L,m,S,x,J,N,I,Y,B,T,z,A,C,E,R,U,W,H,V,$,q]),_:1}),Object(l["g"])("p",null,[D,Object(l["j"])(s["a"],null,{default:Object(l["L"])(()=>[F]),_:1}),G,Object(l["j"])(s["a"],null,{default:Object(l["L"])(()=>[K]),_:1}),M,Object(l["j"])(s["a"],null,{default:Object(l["L"])(()=>[P]),_:1}),Q]),Object(l["g"])("p",null,[X,Object(l["j"])(s["a"],null,{default:Object(l["L"])(()=>[Z]),_:1}),ee,Object(l["j"])(s["a"],null,{default:Object(l["L"])(()=>[te]),_:1}),ce,Object(l["j"])(s["a"],null,{default:Object(l["L"])(()=>[le]),_:1}),ae,Object(l["j"])(s["a"],null,{default:Object(l["L"])(()=>[be]),_:1}),je,Object(l["j"])(s["a"],null,{default:Object(l["L"])(()=>[se]),_:1}),ne,Object(l["j"])(s["a"],null,{default:Object(l["L"])(()=>[Oe]),_:1}),ie,Object(l["j"])(s["a"],null,{default:Object(l["L"])(()=>[ue]),_:1}),oe]),de,Object(l["g"])("p",null,[re,Object(l["j"])(s["a"],null,{default:Object(l["L"])(()=>[pe]),_:1}),fe,Object(l["j"])(s["a"],null,{default:Object(l["L"])(()=>[ge]),_:1}),he,Object(l["j"])(s["a"],null,{default:Object(l["L"])(()=>[ye]),_:1}),ve,Object(l["j"])(s["a"],null,{default:Object(l["L"])(()=>[_e]),_:1}),ke]),we,Object(l["j"])(O["a"]),Object(l["g"])("ul",Le,[Object(l["g"])("li",me,[Object(l["j"])(i["a"]),Object(l["g"])("p",null,[Se,Object(l["j"])(s["a"],null,{default:Object(l["L"])(()=>[xe]),_:1}),Je,Object(l["j"])(s["a"],null,{default:Object(l["L"])(()=>[Ne]),_:1}),Ie])]),Object(l["g"])("li",Ye,[Object(l["j"])(i["a"]),Object(l["g"])("p",null,[Be,Object(l["j"])(s["a"],null,{default:Object(l["L"])(()=>[Te]),_:1}),ze,Object(l["j"])(s["a"],null,{default:Object(l["L"])(()=>[Ae]),_:1}),Ce])]),Object(l["g"])("li",Ee,[Object(l["j"])(i["a"]),Object(l["g"])("p",null,[Re,Object(l["j"])(s["a"],null,{default:Object(l["L"])(()=>[Ue]),_:1}),We,Object(l["j"])(s["a"],null,{default:Object(l["L"])(()=>[He]),_:1}),Ve])])])]),_:1})],512),Object(l["j"])(n["a"],{onResizeWidth:c})])]))}};const qe=$e;t["default"]=qe},d512:function(e,t,c){"use strict";var l=c("7a23");const a={class:"comment"};function b(e,t){return Object(l["v"])(),Object(l["f"])("div",a,[Object(l["g"])("span",null,[Object(l["C"])(e.$slots,"default",{},void 0,!0)])])}c("dbcc");var j=c("6b0d"),s=c.n(j);const n={},O=s()(n,[["render",b],["__scopeId","data-v-358fd9c6"]]);t["a"]=O},dbcc:function(e,t,c){"use strict";c("4f87")}}]);
//# sourceMappingURL=chunk-ad0c80e4.1276289a.js.map