(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d0c53e6"],{"3ded":function(e,t,l){"use strict";l.r(t);var c=l("7a23"),a=l("db86"),s=l("85eb"),i=l("ae20"),n=l("7801"),b=l("567f"),o=l("8174");const j={class:"test-case"},r={class:"screen-divide"},O=Object(c["g"])("h1",null,"Catch Misspelled Variable and Function Names",-1),u=Object(c["i"])(" The "),d=Object(c["i"])("console.log()"),h=Object(c["i"])(" and "),p=Object(c["i"])("typeof"),g=Object(c["i"])(" methods are the two primary ways to check intermediate values and types of program output. Now it's time to get into the common forms that bugs take. One syntax-level issue that fast typers can commiserate with is the humble spelling error. "),f=Object(c["g"])("p",null," Transposed, missing, or miscapitalized characters in a variable or function name will have the browser looking for an object that doesn't exist - and complain in the form of a reference error. JavaScript variable and function names are case-sensitive. ",-1),v=Object(c["g"])("hr",null,null,-1),m=Object(c["i"])(" Fix the two spelling errors in the code so the "),w=Object(c["i"])("netWorkingCapital"),k=Object(c["i"])(" calculation works. "),y=Object(c["g"])("hr",null,null,-1),_={class:"tests"},L={class:"test"},T=Object(c["g"])("p",null,' Check the spelling of the two variables used in the netWorkingCapital calculation, the console output should show that "Net working capital is: 2". ',-1),x={class:"test"},C=Object(c["g"])("p",null," There should be no instances of misspelled variables in the code. ",-1),W={class:"test"},J=Object(c["i"])(" The "),N=Object(c["i"])("receivables"),z=Object(c["i"])(" variable should be declared and used properly in the code. "),F={class:"test"},R=Object(c["g"])("p",null," There should be no instances of misspelled variables in the code. ",-1),S={class:"test"},A=Object(c["i"])(" The "),M=Object(c["i"])("payables"),V=Object(c["i"])(" variable should be declared and used properly in the code. ");var q={setup(e){const t=Object(c["A"])();function l(e){let l=window.innerWidth-e-30;t.value.style.width=l+"px"}return(e,q)=>(Object(c["v"])(),Object(c["f"])("div",j,[Object(c["j"])(a["a"]),Object(c["g"])("div",r,[Object(c["g"])("div",{class:"left-screen",ref_key:"leftScreenRef",ref:t},[Object(c["j"])(s["a"],null,{default:Object(c["L"])(()=>[O,Object(c["g"])("p",null,[u,Object(c["j"])(i["a"],null,{default:Object(c["L"])(()=>[d]),_:1}),h,Object(c["j"])(i["a"],null,{default:Object(c["L"])(()=>[p]),_:1}),g]),f,v,Object(c["g"])("p",null,[m,Object(c["j"])(i["a"],null,{default:Object(c["L"])(()=>[w]),_:1}),k]),y,Object(c["j"])(b["a"]),Object(c["g"])("ul",_,[Object(c["g"])("li",L,[Object(c["j"])(o["a"]),T]),Object(c["g"])("li",x,[Object(c["j"])(o["a"]),C]),Object(c["g"])("li",W,[Object(c["j"])(o["a"]),Object(c["g"])("p",null,[J,Object(c["j"])(i["a"],null,{default:Object(c["L"])(()=>[N]),_:1}),z])]),Object(c["g"])("li",F,[Object(c["j"])(o["a"]),R]),Object(c["g"])("li",S,[Object(c["j"])(o["a"]),Object(c["g"])("p",null,[A,Object(c["j"])(i["a"],null,{default:Object(c["L"])(()=>[M]),_:1}),V])])])]),_:1})],512),Object(c["j"])(n["a"],{onResizeWidth:l})])]))}};const B=q;t["default"]=B}}]);
//# sourceMappingURL=chunk-2d0c53e6.7224b9e7.js.map