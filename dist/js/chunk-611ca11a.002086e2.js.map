{"version":3,"sources":["webpack:///./src/views/es6/use-class-syntax-to-define-a-constructor-function.vue","webpack:///./src/views/es6/use-class-syntax-to-define-a-constructor-function.vue?861b","webpack:///./src/components/util-components/comment.vue","webpack:///./src/components/util-components/comment.vue?47ad","webpack:///./src/components/util-components/comment.vue?ebee"],"names":["leftScreenRef","ref","changeWidth","n","size","window","innerWidth","value","style","width","__exports__","class","_createElementBlock","_hoisted_1","_createElementVNode","_renderSlot","_ctx","$slots","undefined","script","render"],"mappings":"gkPAkLA,MAAMA,EAAgBC,iBAEtB,SAASC,EAAYC,GACnB,IAAIC,EAAOC,OAAOC,WAAaH,EAAI,GACnCH,EAAcO,MAAMC,MAAMC,MAAQL,EAAO,K,2tFCnL3C,MAAMM,GAAc,GAEL,iB,oFCJRC,MAAM,W,wCAAXC,eAEM,MAFNC,EAEM,CADJC,eAA2B,aAApBC,eAAaC,EAAAC,OAAA,kBAAAC,GAAA,O,mCCDxB,MAAMC,EAAS,GAKTT,EAA2B,IAAgBS,EAAQ,CAAC,CAAC,SAASC,GAAQ,CAAC,YAAY,qBAE1E,U,kCCRf","file":"js/chunk-611ca11a.002086e2.js","sourcesContent":["<template>\r\n  <div class=\"test-case\">\r\n    <Navigation />\r\n    <div class=\"screen-divide\">\r\n      <div class=\"left-screen\" ref=\"leftScreenRef\">\r\n        <LeftScreen>\r\n          <h1>Use class Syntax to Define a Constructor Function</h1>\r\n          <p>\r\n            ES6 provides a new syntax to create objects, using the <i>class</i>\r\n            keyword.\r\n          </p>\r\n          <p>\r\n            In ES5, an object can be created by defining a\r\n            <Code>constructor</Code> function and using the\r\n            <Code>new</Code> keyword to instantiate the object.\r\n          </p>\r\n          <p>\r\n            In ES6, a <Code>class</Code> declaration has a\r\n            <Code>constructor</Code> method that is invoked with the\r\n            <Code>new</Code>\r\n            keyword. If the <Code>constructor</Code> method is not explicitly\r\n            defined, then it is implicitly defined with no arguments.\r\n          </p>\r\n          <Comment>\r\n            <span>// Explicit constructor</span>\r\n            <div class=\"next\"></div>\r\n            <span class=\"blue\">class </span>\r\n            <span class=\"red\">SpaceShuttle </span>\r\n            <span class=\"black\">{</span>\r\n            <div class=\"next\"></div>\r\n            <span class=\"tab\"></span>\r\n            <span class=\"red\">constructor</span>\r\n            <span class=\"black\">(targetPlanet) {</span>\r\n            <div class=\"next\"></div>\r\n            <span class=\"tab\"></span><span class=\"tab\"></span>\r\n            <span class=\"blue\">this</span>\r\n            <span class=\"black\">.targetPlanet = targetPlanet;</span>\r\n            <div class=\"next\"></div>\r\n            <span class=\"tab\"></span>\r\n            <span class=\"black\">}</span>\r\n            <div class=\"next\"></div>\r\n            <span class=\"tab\"></span>\r\n            <span class=\"red\">takeOff</span>\r\n            <span class=\"black\">() {</span>\r\n            <div class=\"next\"></div>\r\n            <span class=\"tab\"></span>\r\n            <span class=\"tab\"></span>\r\n            <span class=\"black\">console.</span>\r\n            <span class=\"red\">log</span>\r\n            <span class=\"black\">(</span>\r\n            <span class=\"green\">\"To \"</span>\r\n            <span class=\"black\"> + </span>\r\n            <span class=\"blue\">this</span>\r\n            <span class=\"black\">.targetPlanet + </span>\r\n            <span class=\"green\">\"!\"</span>\r\n            <span class=\"black\">);</span>\r\n            <div class=\"next\"></div>\r\n            <span class=\"tab\"></span>\r\n            <span class=\"black\">}</span>\r\n            <div class=\"next\"></div>\r\n            <span class=\"black\">}</span>\r\n            <div class=\"next\"></div>\r\n            <div class=\"next\"></div>\r\n            <span>// Implicit constructor </span>\r\n            <div class=\"next\"></div>\r\n            <span class=\"blue\">class </span>\r\n            <span class=\"red\">Rocket </span>\r\n            <span class=\"black\">{</span>\r\n            <div class=\"next\"></div>\r\n            <span class=\"tab\"></span>\r\n            <span class=\"red\">launch</span>\r\n            <span class=\"black\">() {</span>\r\n            <div class=\"next\"></div>\r\n            <span class=\"tab\"></span>\r\n            <span class=\"tab\"></span>\r\n            <span class=\"black\">console.</span>\r\n            <span class=\"red\">log</span>\r\n            <span class=\"black\">( </span>\r\n            <span class=\"green\">\"To the moon!\" </span>\r\n            <span class=\"black\">);</span>\r\n            <div class=\"next\"></div>\r\n            <span class=\"tab\"></span>\r\n            <span class=\"black\">}</span>\r\n            <div class=\"next\"></div>\r\n            <span class=\"black\">}</span>\r\n            <div class=\"next\"></div>\r\n            <div class=\"next\"></div>\r\n            <span class=\"blue\">const </span>\r\n            <span class=\"black\">zeus = </span>\r\n            <span class=\"blue\">new </span>\r\n            <span class=\"red\">SpaceShuttle</span>\r\n            <span class=\"black\">( </span>\r\n            <span class=\"green\">'Jupiter' </span>\r\n            <span class=\"black\">);</span>\r\n            <div class=\"next\"></div>\r\n            <span>// prints To Jupiter! in console</span>\r\n            <div class=\"next\"></div>\r\n            <span class=\"black\">zeus.</span>\r\n            <span class=\"red\">takeOff</span>\r\n            <span class=\"black\">();</span>\r\n            <div class=\"next\"></div>\r\n            <div class=\"next\"></div>\r\n            <span class=\"blue\">const </span>\r\n            <span class=\"black\">atlas = </span>\r\n            <span class=\"blue\">new </span>\r\n            <span class=\"red\">Rocket</span>\r\n            <span class=\"black\">();</span>\r\n            <div class=\"next\"></div>\r\n            <span>// prints To the moon! in console</span>\r\n            <div class=\"next\"></div>\r\n            <span class=\"black\">atlas.</span>\r\n            <span class=\"red\">launch</span>\r\n            <span class=\"black\">();</span>\r\n          </Comment>\r\n          <p>\r\n            It should be noted that the <Code>class</Code> keyword declares a\r\n            new function, to which a constructor is added. This constructor is\r\n            invoked when <Code>new</Code> is called to create a new object.\r\n          </p>\r\n          <p>\r\n            <b>Note:</b> UpperCamelCase should be used by convention for ES6\r\n            class names, as in <Code>SpaceShuttle</Code> used above.\r\n          </p>\r\n          <p>\r\n            The <Code>constructor</Code> method is a special method for creating\r\n            and initializing an object created with a class. You will learn more\r\n            about it in the Object Oriented Programming section of the\r\n            JavaScript Algorithms And Data Structures Certification.\r\n          </p>\r\n          <hr />\r\n          <p>\r\n            Use the <Code>class</Code> keyword and write a\r\n            <Code>constructor</Code> to create the <Code>Vegetable</Code> class\r\n          </p>\r\n          <p>\r\n            The <Code>Vegetable</Code> class allows you to create a vegetable\r\n            object with a property <Code>name</Code> that gets passed to the\r\n            <Code>constructor</Code>.\r\n          </p>\r\n          <hr />\r\n          <tests />\r\n          <ul class=\"tests\">\r\n            <li class=\"test\">\r\n              <tests-initial />\r\n              <p>\r\n                <Code>Vegetable</Code> should be a <Code>class</Code> with a\r\n                defined <Code>constructor</Code> method.\r\n              </p>\r\n            </li>\r\n            <li class=\"test\">\r\n              <tests-initial />\r\n              <p>The <Code>class</Code> keyword should be used.</p>\r\n            </li>\r\n            <li class=\"test\">\r\n              <tests-initial />\r\n              <p><Code>Vegetable</Code> should be able to be instantiated.</p>\r\n            </li>\r\n            <li class=\"test\">\r\n              <tests-initial />\r\n              <p><Code>carrot.name</Code> should return <Code>carrot</Code>.</p>\r\n            </li>\r\n          </ul>\r\n        </LeftScreen>\r\n      </div>\r\n      <RightScreen @resize-width=\"changeWidth\"> </RightScreen>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport Comment from \"@/components/util-components/comment.vue\";\r\nimport Navigation from \"@/components/util-components/navigation.vue\";\r\nimport LeftScreen from \"@/components/util-components/left-screen.vue\";\r\nimport Code from \"@/components/util-components/code.vue\";\r\nimport RightScreen from \"@/components/util-components/right-screen.vue\";\r\nimport Tests from \"@/components/util-components/tests.vue\";\r\nimport testsInitial from \"@/components/util-components/svg-components/tests-initial.vue\";\r\nimport { ref } from \"vue\";\r\nconst leftScreenRef = ref();\r\n\r\nfunction changeWidth(n) {\r\n  let size = window.innerWidth - n - 30;\r\n  leftScreenRef.value.style.width = size + \"px\";\r\n}\r\n</script>\r\n","import script from \"./use-class-syntax-to-define-a-constructor-function.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./use-class-syntax-to-define-a-constructor-function.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n  <div class=\"comment\">\r\n    <span> <slot></slot></span>\r\n  </div>\r\n</template>\r\n\r\n<style scoped>\r\n.comment {\r\n  background-color: #f5f2f0;\r\n  padding: 1rem;\r\n  width: 100%;\r\n  margin: 15px 0;\r\n  font-size: 1.12rem;\r\n}\r\n</style>\r\n","import { render } from \"./comment.vue?vue&type=template&id=358fd9c6&scoped=true\"\nconst script = {}\n\nimport \"./comment.vue?vue&type=style&index=0&id=358fd9c6&scoped=true&lang=css\"\n\nimport exportComponent from \"E:\\\\Altyn\\\\portfolio\\\\vue3\\\\free-code-camp-clone\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-358fd9c6\"]])\n\nexport default __exports__","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./comment.vue?vue&type=style&index=0&id=358fd9c6&scoped=true&lang=css\""],"sourceRoot":""}