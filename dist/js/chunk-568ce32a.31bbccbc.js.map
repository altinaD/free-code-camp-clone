{"version":3,"sources":["webpack:///./src/views/basic-js/explore-differences-between-the-var-and-let-keywords.vue","webpack:///./src/views/basic-js/explore-differences-between-the-var-and-let-keywords.vue?941e","webpack:///./src/components/util-components/comment.vue","webpack:///./src/components/util-components/comment.vue?47ad","webpack:///./src/components/util-components/comment.vue?ebee"],"names":["leftScreenRef","ref","changeWidth","n","size","window","innerWidth","value","style","width","__exports__","class","_createElementBlock","_hoisted_1","_createElementVNode","_renderSlot","_ctx","$slots","undefined","script","render"],"mappings":"2mHAqGA,MAAMA,EAAgBC,iBAEtB,SAASC,EAAYC,GACnB,IAAIC,EAAOC,OAAOC,WAAaH,EAAI,GACnCH,EAAcO,MAAMC,MAAMC,MAAQL,EAAO,K,mlECtG3C,MAAMM,GAAc,GAEL,iB,oFCJRC,MAAM,W,wCAAXC,eAEM,MAFNC,EAEM,CADJC,eAA2B,aAApBC,eAAaC,EAAAC,OAAA,kBAAAC,GAAA,O,mCCDxB,MAAMC,EAAS,GAKTT,EAA2B,IAAgBS,EAAQ,CAAC,CAAC,SAASC,GAAQ,CAAC,YAAY,qBAE1E,U,kCCRf","file":"js/chunk-568ce32a.31bbccbc.js","sourcesContent":["<template>\r\n  <div class=\"test-case\">\r\n    <Navigation />\r\n    <div class=\"screen-divide\">\r\n      <div class=\"left-screen\" ref=\"leftScreenRef\">\r\n        <LeftScreen>\r\n          <h1>Explore Differences Between the var and let Keywords</h1>\r\n          <p>\r\n            One of the biggest problems with declaring variables with the\r\n            <Code>var</Code>\r\n            keyword is that you can easily overwrite variable declarations:\r\n          </p>\r\n          <Comment\r\n            >var <span class=\"black\">camper</span> =\r\n            <span class=\"green\">\"James\"</span>;\r\n            <div class=\"next\"></div>\r\n            var <span class=\"black\">camper</span> =\r\n            <span class=\"green\">\"David\"</span>;\r\n            <div class=\"next\"></div>\r\n            <span class=\"black\">console.</span>\r\n            <span class=\"red\">log</span>\r\n            <span class=\"black\">(camper);</span>\r\n          </Comment>\r\n          <p>\r\n            In the code above, the <Code>camper</Code> variable is originally\r\n            declared as <Code>James</Code>, and is then overridden to be\r\n            <Code>David</Code>. The console then displays the string\r\n            <Code>David</Code>.\r\n          </p>\r\n          <p>\r\n            In a small application, you might not run into this type of problem.\r\n            But as your codebase becomes larger, you might accidentally\r\n            overwrite a variable that you did not intend to. Because this\r\n            behavior does not throw an error, searching for and fixing bugs\r\n            becomes more difficult.\r\n          </p>\r\n          <p>\r\n            A keyword called <Code>let</Code> was introduced in ES6, a major\r\n            update to JavaScript, to solve this potential issue with the\r\n            <Code>var</Code> keyword. You'll learn about other ES6 features in\r\n            later challenges.\r\n          </p>\r\n          <p>\r\n            If you replace <Code>var</Code> with <Code>let</Code> in the code\r\n            above, it results in an error:\r\n          </p>\r\n\r\n          <Comment\r\n            >var <span class=\"black\">camper</span> =\r\n            <span class=\"green\">\"James\"</span>;\r\n            <div class=\"next\"></div>\r\n            var <span class=\"black\">camper</span> =\r\n            <span class=\"green\">\"David\"</span>; <br />\r\n          </Comment>\r\n          <p>The error can be seen in your browser console.</p>\r\n          So unlike <Code>var</Code>, when you use <Code>let</Code>, a variable\r\n          with the same name can only be declared once.\r\n          <hr />\r\n          <p>Update the code so it only uses the <Code>let</Code> keyword.</p>\r\n          <hr />\r\n          <tests />\r\n          <ul class=\"tests\">\r\n            <li class=\"test\">\r\n              <tests-initial />\r\n              <p><Code>var</Code> should not exist in the code.</p>\r\n            </li>\r\n            <li class=\"test\">\r\n              <tests-initial />\r\n              <p>\r\n                <Code>catName</Code> should be the string <Code>Oliver.</Code>\r\n              </p>\r\n            </li>\r\n            <li class=\"test\">\r\n              <tests-initial />\r\n              <p>\r\n                <Code>catSound</Code> should be the string <Code>Meow!</Code>\r\n              </p>\r\n            </li>\r\n          </ul>\r\n        </LeftScreen>\r\n      </div>\r\n\r\n      <RightScreen @resize-width=\"changeWidth\">\r\n        <p>\r\n          Lorem ipsum dolor, sit amet consectetur adipisicing elit. Eos,\r\n          doloremque.\r\n        </p>\r\n      </RightScreen>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport Comment from \"@/components/util-components/comment.vue\";\r\nimport Navigation from \"@/components/util-components/navigation.vue\";\r\nimport LeftScreen from \"@/components/util-components/left-screen.vue\";\r\nimport Code from \"@/components/util-components/code.vue\";\r\nimport RightScreen from \"@/components/util-components/right-screen.vue\";\r\nimport Tests from \"@/components/util-components/tests.vue\";\r\nimport testsInitial from \"@/components/util-components/svg-components/tests-initial.vue\";\r\nimport { ref } from \"vue\";\r\nconst leftScreenRef = ref();\r\n\r\nfunction changeWidth(n) {\r\n  let size = window.innerWidth - n - 30;\r\n  leftScreenRef.value.style.width = size + \"px\";\r\n}\r\n</script>\r\n","import script from \"./explore-differences-between-the-var-and-let-keywords.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./explore-differences-between-the-var-and-let-keywords.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n  <div class=\"comment\">\r\n    <span> <slot></slot></span>\r\n  </div>\r\n</template>\r\n\r\n<style scoped>\r\n.comment {\r\n  background-color: #f5f2f0;\r\n  padding: 1rem;\r\n  width: 100%;\r\n  margin: 15px 0;\r\n  font-size: 1.12rem;\r\n}\r\n</style>\r\n","import { render } from \"./comment.vue?vue&type=template&id=358fd9c6&scoped=true\"\nconst script = {}\n\nimport \"./comment.vue?vue&type=style&index=0&id=358fd9c6&scoped=true&lang=css\"\n\nimport exportComponent from \"E:\\\\Altyn\\\\portfolio\\\\vue3\\\\free-code-camp-clone\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-358fd9c6\"]])\n\nexport default __exports__","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./comment.vue?vue&type=style&index=0&id=358fd9c6&scoped=true&lang=css\""],"sourceRoot":""}