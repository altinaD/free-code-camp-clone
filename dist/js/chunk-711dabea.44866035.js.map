{"version":3,"sources":["webpack:///./src/views/es6/prevent-object-mutation.vue","webpack:///./src/views/es6/prevent-object-mutation.vue?b6e8","webpack:///./src/components/util-components/comment.vue","webpack:///./src/components/util-components/comment.vue?47ad","webpack:///./src/components/util-components/comment.vue?ebee"],"names":["leftScreenRef","ref","changeWidth","n","size","window","innerWidth","value","style","width","__exports__","class","_createElementBlock","_hoisted_1","_createElementVNode","_renderSlot","_ctx","$slots","undefined","script","render"],"mappings":"quHAwGA,MAAMA,EAAgBC,iBAEtB,SAASC,EAAYC,GACnB,IAAIC,EAAOC,OAAOC,WAAaH,EAAI,GACnCH,EAAcO,MAAMC,MAAMC,MAAQL,EAAO,K,4zDCzG3C,MAAMM,GAAc,GAEL,iB,2DCJRC,MAAM,W,wCAAXC,eAEM,MAFNC,EAEM,CADJC,eAA2B,aAApBC,eAAaC,EAAAC,OAAA,kBAAAC,GAAA,O,mCCDxB,MAAMC,EAAS,GAKTT,EAA2B,IAAgBS,EAAQ,CAAC,CAAC,SAASC,GAAQ,CAAC,YAAY,qBAE1E,U,kCCRf","file":"js/chunk-711dabea.44866035.js","sourcesContent":["<template>\r\n  <div class=\"test-case\">\r\n    <Navigation />\r\n    <div class=\"screen-divide\">\r\n      <div class=\"left-screen\" ref=\"leftScreenRef\">\r\n        <LeftScreen>\r\n          <h1>Prevent Object Mutation</h1>\r\n          <p>\r\n            As seen in the previous challenge, <Code>const</Code> declaration\r\n            alone doesn't really protect your data from mutation. To ensure your\r\n            data doesn't change, JavaScript provides a function\r\n            <Code>Object.freeze</Code> to prevent data mutation.\r\n          </p>\r\n          <p>\r\n            Any attempt at changing the object will be rejected, with an error\r\n            thrown if the script is running in strict mode.\r\n          </p>\r\n          <Comment>\r\n            <span class=\"blue\">let </span><span class=\"black\">obj = {</span>\r\n            <div class=\"next\"></div>\r\n            <span class=\"tab\"></span>\r\n            <span class=\"red\">name: </span>\r\n            <span class=\"black\">:</span>\r\n            <span class=\"green\">\"FreeCodeCamp\"</span>\r\n            <span class=\"black\">,</span>\r\n            <div class=\"next\"></div>\r\n            <span class=\"tab\"></span>\r\n            <span class=\"red\">review</span>\r\n            <span class=\"black\">:</span>\r\n            <span class=\"green\">\"Awesome\"</span>\r\n            <div class=\"next\"></div>\r\n            <span class=\"black\">};</span>\r\n            <div class=\"next\"></div>\r\n            <span class=\"black\">Object.</span>\r\n            <span class=\"red\">freeze</span>\r\n            <span class=\"black\">(obj);</span>\r\n            <div class=\"next\"></div>\r\n            <span class=\"black\">obj.review = </span>\r\n            <span class=\"green\">\"bad\"</span>\r\n            <span class=\"black\">;</span>\r\n            <div class=\"next\"></div>\r\n            <span class=\"black\">obj.newProp = </span>\r\n            <span class=\"green\">\"Test\"</span>\r\n            <span class=\"black\">;</span>\r\n            <div class=\"next\"></div>\r\n            <span class=\"black\">console.</span>\r\n            <span class=\"red\">log</span>\r\n            <span class=\"black\">(obj);</span>\r\n          </Comment>\r\n          <p>\r\n            The <Code>obj.review</Code> and <Code>obj.newProp</Code> assignments\r\n            will result in errors, because our editor runs in strict mode by\r\n            default, and the console will display the value\r\n            <Code>{ name: \"FreeCodeCamp\", review: \"Awesome\" }</Code>.\r\n          </p>\r\n          <hr />\r\n          <p>\r\n            In this challenge you are going to use <Code>Object.freeze</Code> to\r\n            prevent mathematical constants from changing. You need to freeze the\r\n            <Code>MATH_CONSTANTS</Code> object so that no one is able to alter\r\n            the value of <Code>PI </Code>, add, or delete properties.\r\n          </p>\r\n          <hr />\r\n          <tests />\r\n          <ul class=\"tests\">\r\n            <li class=\"test\">\r\n              <tests-initial />\r\n              <p>You should not replace the <Code>const</Code> keyword.</p>\r\n            </li>\r\n            <li class=\"test\">\r\n              <tests-initial />\r\n              <p>\r\n                <Code>MATH_CONSTANTS</Code> should be a constant variable (by\r\n                using <Code>const</Code>).\r\n              </p>\r\n            </li>\r\n            <li class=\"test\">\r\n              <tests-initial />\r\n              <p>\r\n                You should not change the original declaration of\r\n                <Code>MATH_CONSTANTS</Code>.\r\n              </p>\r\n            </li>\r\n            <li class=\"test\">\r\n              <tests-initial />\r\n              <p><Code>PI</Code> should equal <Code>3.14</Code>.</p>\r\n            </li>\r\n          </ul>\r\n        </LeftScreen>\r\n      </div>\r\n      <RightScreen @resize-width=\"changeWidth\"> </RightScreen>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport Comment from \"@/components/util-components/comment.vue\";\r\nimport Navigation from \"@/components/util-components/navigation.vue\";\r\nimport LeftScreen from \"@/components/util-components/left-screen.vue\";\r\nimport Code from \"@/components/util-components/code.vue\";\r\nimport RightScreen from \"@/components/util-components/right-screen.vue\";\r\nimport Tests from \"@/components/util-components/tests.vue\";\r\nimport testsInitial from \"@/components/util-components/svg-components/tests-initial.vue\";\r\nimport { ref } from \"vue\";\r\nconst leftScreenRef = ref();\r\n\r\nfunction changeWidth(n) {\r\n  let size = window.innerWidth - n - 30;\r\n  leftScreenRef.value.style.width = size + \"px\";\r\n}\r\n</script>\r\n","import script from \"./prevent-object-mutation.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./prevent-object-mutation.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n  <div class=\"comment\">\r\n    <span> <slot></slot></span>\r\n  </div>\r\n</template>\r\n\r\n<style scoped>\r\n.comment {\r\n  background-color: #f5f2f0;\r\n  padding: 1rem;\r\n  width: 100%;\r\n  margin: 15px 0;\r\n  font-size: 1.12rem;\r\n}\r\n</style>\r\n","import { render } from \"./comment.vue?vue&type=template&id=358fd9c6&scoped=true\"\nconst script = {}\n\nimport \"./comment.vue?vue&type=style&index=0&id=358fd9c6&scoped=true&lang=css\"\n\nimport exportComponent from \"E:\\\\Altyn\\\\portfolio\\\\vue3\\\\free-code-camp-clone\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-358fd9c6\"]])\n\nexport default __exports__","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./comment.vue?vue&type=style&index=0&id=358fd9c6&scoped=true&lang=css\""],"sourceRoot":""}