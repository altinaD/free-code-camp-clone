{"version":3,"sources":["webpack:///./src/views/es6/use-destructuring-assignment-to-assign-variables-from-arrays.vue","webpack:///./src/views/es6/use-destructuring-assignment-to-assign-variables-from-arrays.vue?3c8c","webpack:///./src/components/util-components/comment.vue","webpack:///./src/components/util-components/comment.vue?47ad","webpack:///./src/components/util-components/comment.vue?ebee"],"names":["leftScreenRef","ref","changeWidth","n","size","window","innerWidth","value","style","width","__exports__","class","_createElementBlock","_hoisted_1","_createElementVNode","_renderSlot","_ctx","$slots","undefined","script","render"],"mappings":"06IAuHA,MAAMA,EAAgBC,iBAEtB,SAASC,EAAYC,GACnB,IAAIC,EAAOC,OAAOC,WAAaH,EAAI,GACnCH,EAAcO,MAAMC,MAAMC,MAAQL,EAAO,K,g1ECxH3C,MAAMM,GAAc,GAEL,iB,oFCJRC,MAAM,W,wCAAXC,eAEM,MAFNC,EAEM,CADJC,eAA2B,aAApBC,eAAaC,EAAAC,OAAA,kBAAAC,GAAA,O,mCCDxB,MAAMC,EAAS,GAKTT,EAA2B,IAAgBS,EAAQ,CAAC,CAAC,SAASC,GAAQ,CAAC,YAAY,qBAE1E,U,kCCRf","file":"js/chunk-1ec6d9b5.58d6d688.js","sourcesContent":["<template>\r\n  <div class=\"test-case\">\r\n    <Navigation />\r\n    <div class=\"screen-divide\">\r\n      <div class=\"left-screen\" ref=\"leftScreenRef\">\r\n        <LeftScreen>\r\n          <h1>Use Destructuring Assignment to Assign Variables from Arrays</h1>\r\n          <p>\r\n            ES6 makes destructuring arrays as easy as destructuring objects.\r\n          </p>\r\n          <p>\r\n            One key difference between the spread operator and array\r\n            destructuring is that the spread operator unpacks all contents of an\r\n            array into a comma-separated list. Consequently, you cannot pick or\r\n            choose which elements you want to assign to variables.\r\n          </p>\r\n          <p>Destructuring an array lets us do exactly that:</p>\r\n          <Comment>\r\n            <span class=\"blue\">const </span>\r\n            <span class=\"black\">[ a, b ] = [ </span>\r\n            <span class=\"purple\">1</span>\r\n            <span class=\"black\">, </span>\r\n            <span class=\"purple\">2</span>\r\n            <span class=\"black\">, </span>\r\n            <span class=\"purple\">3</span>\r\n            <span class=\"black\">, </span>\r\n            <span class=\"purple\">4</span>\r\n            <span class=\"black\">, </span>\r\n            <span class=\"purple\">5</span>\r\n            <span class=\"black\">, </span>\r\n            <span class=\"purple\">6</span>\r\n            <span class=\"black\">]; </span>\r\n            <div class=\"next\"></div>\r\n            <span class=\"black\">console.</span>\r\n            <span class=\"red\">log</span>\r\n            <span class=\"black\">( a, b );</span>\r\n          </Comment>\r\n          <p>\r\n            The console will display the values of <Code>a</Code> and\r\n            <Code>b</Code> as <Code>1, 2</Code>.\r\n          </p>\r\n          <p>\r\n            The variable <Code>a</Code> is assigned the first value of the\r\n            array, and <Code>b</Code> is assigned the second value of the array.\r\n            We can also access the value at any index in an array with\r\n            destructuring by using commas to reach the desired index:\r\n          </p>\r\n          <Comment>\r\n            <span class=\"blue\">const </span>\r\n            <span class=\"black\">[ a, b, , , c ] = [ </span>\r\n            <span class=\"purple\">1</span>\r\n            <span class=\"black\">, </span>\r\n            <span class=\"purple\">2</span>\r\n            <span class=\"black\">, </span>\r\n            <span class=\"purple\">3</span>\r\n            <span class=\"black\">, </span>\r\n            <span class=\"purple\">4</span>\r\n            <span class=\"black\">, </span>\r\n            <span class=\"purple\">5</span>\r\n            <span class=\"black\">, </span>\r\n            <span class=\"purple\">6</span>\r\n            <span class=\"black\">]; </span>\r\n            <div class=\"next\"></div>\r\n            <span class=\"black\">console.</span>\r\n            <span class=\"red\">log</span>\r\n            <span class=\"black\">( a, b, c );</span>\r\n          </Comment>\r\n          <p>\r\n            The console will display the values of <Code>a</Code>,\r\n            <Code>b</Code>, and <Code>c</Code> as <Code>1, 2, 5</Code>.\r\n          </p>\r\n          <hr />\r\n          <p>\r\n            Use destructuring assignment to swap the values of\r\n            <Code>a</Code> and <Code>b</Code> so that <Code>a</Code> receives\r\n            the value stored in <Code>b</Code>, and <Code>b</Code> receives the\r\n            value stored in <Code>a</Code>.\r\n          </p>\r\n          <hr />\r\n          <tests />\r\n          <ul class=\"tests\">\r\n            <li class=\"test\">\r\n              <tests-initial />\r\n              <p>\r\n                The value of <Code>a</Code> should be <Code>6</Code>, after\r\n                swapping.\r\n              </p>\r\n            </li>\r\n            <li class=\"test\">\r\n              <tests-initial />\r\n              <p>\r\n                The value of <Code>b</Code> should be <Code>8</Code>, after\r\n                swapping.\r\n              </p>\r\n            </li>\r\n            <li class=\"test\">\r\n              <tests-initial />\r\n              <p>\r\n                You should use array destructuring to swap <Code>a</Code> and\r\n                <Code>b</Code>.\r\n              </p>\r\n            </li>\r\n          </ul>\r\n        </LeftScreen>\r\n      </div>\r\n      <RightScreen @resize-width=\"changeWidth\"> </RightScreen>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport Comment from \"@/components/util-components/comment.vue\";\r\nimport Navigation from \"@/components/util-components/navigation.vue\";\r\nimport LeftScreen from \"@/components/util-components/left-screen.vue\";\r\nimport Code from \"@/components/util-components/code.vue\";\r\nimport RightScreen from \"@/components/util-components/right-screen.vue\";\r\nimport Tests from \"@/components/util-components/tests.vue\";\r\nimport testsInitial from \"@/components/util-components/svg-components/tests-initial.vue\";\r\nimport { ref } from \"vue\";\r\nconst leftScreenRef = ref();\r\n\r\nfunction changeWidth(n) {\r\n  let size = window.innerWidth - n - 30;\r\n  leftScreenRef.value.style.width = size + \"px\";\r\n}\r\n</script>\r\n","import script from \"./use-destructuring-assignment-to-assign-variables-from-arrays.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./use-destructuring-assignment-to-assign-variables-from-arrays.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n  <div class=\"comment\">\r\n    <span> <slot></slot></span>\r\n  </div>\r\n</template>\r\n\r\n<style scoped>\r\n.comment {\r\n  background-color: #f5f2f0;\r\n  padding: 1rem;\r\n  width: 100%;\r\n  margin: 15px 0;\r\n  font-size: 1.12rem;\r\n}\r\n</style>\r\n","import { render } from \"./comment.vue?vue&type=template&id=358fd9c6&scoped=true\"\nconst script = {}\n\nimport \"./comment.vue?vue&type=style&index=0&id=358fd9c6&scoped=true&lang=css\"\n\nimport exportComponent from \"E:\\\\Altyn\\\\portfolio\\\\vue3\\\\free-code-camp-clone\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-358fd9c6\"]])\n\nexport default __exports__","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./comment.vue?vue&type=style&index=0&id=358fd9c6&scoped=true&lang=css\""],"sourceRoot":""}