(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2aa4029b"],{"4f87":function(e,t,c){},"7f5f":function(e,t,c){"use strict";c.r(t);var l=c("7a23"),a=c("d512"),s=c("db86"),b=c("85eb"),j=c("ae20"),n=c("7801"),O=c("567f"),u=c("8174");const i={class:"test-case"},r={class:"screen-divide"},o=Object(l["g"])("h1",null,"Write Arrow Functions with Parameters",-1),p=Object(l["g"])("p",null," Just like a regular function, you can pass arguments into an arrow function. ",-1),d=Object(l["g"])("span",{class:"blue"},"const ",-1),g=Object(l["g"])("span",{class:"red"},"doubler ",-1),f=Object(l["g"])("span",{class:"black"},"= (item) => item * ",-1),h=Object(l["g"])("span",{class:"purple"},"2",-1),m=Object(l["g"])("span",{class:"black"},";",-1),w=Object(l["g"])("div",{class:"next"},null,-1),v=Object(l["g"])("span",{class:"red"},"doubler",-1),_=Object(l["g"])("span",{class:"black"},"(",-1),k=Object(l["g"])("span",{class:"purple"},"4",-1),L=Object(l["g"])("span",{class:"black"},");",-1),y=Object(l["i"])("doubler(4)"),C=Object(l["i"])(" would return the value "),x=Object(l["i"])("8"),I=Object(l["i"])("."),J=Object(l["g"])("p",null," If an arrow function has a single parameter, the parentheses enclosing the parameter may be omitted. ",-1),R=Object(l["g"])("span",{class:"blue"},"const ",-1),W=Object(l["g"])("span",{class:"red"},"doubler ",-1),A=Object(l["g"])("span",{class:"black"},"= item => item * ",-1),z=Object(l["g"])("span",{class:"purple"},"2",-1),F=Object(l["g"])("span",{class:"black"},";",-1),P=Object(l["g"])("p",null," It is possible to pass more than one argument into an arrow function. ",-1),S=Object(l["g"])("span",{class:"blue"},"const ",-1),T=Object(l["g"])("span",{class:"red"},"multiplier ",-1),Y=Object(l["g"])("span",{class:"black"},"= (item, multi) => item * multi;",-1),$=Object(l["g"])("div",{class:"next"},null,-1),q=Object(l["g"])("span",{class:"red"},"multiplier",-1),B=Object(l["g"])("span",{class:"black"},"(",-1),D=Object(l["g"])("span",{class:"purple"},"4",-1),E=Object(l["g"])("span",{class:"black"},",",-1),G=Object(l["g"])("span",{class:"purple"}," 2",-1),H=Object(l["g"])("span",{class:"black"},");",-1),K=Object(l["i"])("multiplier(4, 2)"),M=Object(l["i"])(" would return the value "),N=Object(l["i"])("8"),Q=Object(l["i"])(". "),U=Object(l["g"])("hr",null,null,-1),V=Object(l["i"])(" Rewrite the "),X=Object(l["i"])("myConcat"),Z=Object(l["i"])(" function which appends contents of "),ee=Object(l["i"])("arr2"),te=Object(l["i"])(" to "),ce=Object(l["i"])("arr1"),le=Object(l["i"])(" so that the function uses arrow function syntax. "),ae=Object(l["g"])("hr",null,null,-1),se={class:"tests"},be={class:"test"},je=Object(l["i"])("You should replace the "),ne=Object(l["i"])("var"),Oe=Object(l["i"])(" keyword."),ue={class:"test"},ie=Object(l["i"])("myConcat"),re=Object(l["i"])(" should be a constant variable (by using "),oe=Object(l["i"])("const"),pe=Object(l["i"])("). "),de={class:"test"},ge=Object(l["i"])("myConcat"),fe=Object(l["i"])(" should be an arrow function with two parameters "),he={class:"test"},me=Object(l["i"])("myConcat"),we=Object(l["i"])(" should return [1, 2, 3, 4, 5]."),ve={class:"test"},_e=Object(l["i"])("The "),ke=Object(l["i"])("function"),Le=Object(l["i"])(" keyword should not be used.");var ye={setup(e){const t=Object(l["A"])();function c(e){let c=window.innerWidth-e-30;t.value.style.width=c+"px"}return(e,ye)=>(Object(l["v"])(),Object(l["f"])("div",i,[Object(l["j"])(s["a"]),Object(l["g"])("div",r,[Object(l["g"])("div",{class:"left-screen",ref_key:"leftScreenRef",ref:t},[Object(l["j"])(b["a"],null,{default:Object(l["L"])(()=>[o,p,Object(l["j"])(a["a"],null,{default:Object(l["L"])(()=>[d,g,f,h,m,w,v,_,k,L]),_:1}),Object(l["g"])("p",null,[Object(l["j"])(j["a"],null,{default:Object(l["L"])(()=>[y]),_:1}),C,Object(l["j"])(j["a"],null,{default:Object(l["L"])(()=>[x]),_:1}),I]),J,Object(l["j"])(a["a"],null,{default:Object(l["L"])(()=>[R,W,A,z,F]),_:1}),P,Object(l["j"])(a["a"],null,{default:Object(l["L"])(()=>[S,T,Y,$,q,B,D,E,G,H]),_:1}),Object(l["g"])("p",null,[Object(l["j"])(j["a"],null,{default:Object(l["L"])(()=>[K]),_:1}),M,Object(l["j"])(j["a"],null,{default:Object(l["L"])(()=>[N]),_:1}),Q]),U,Object(l["g"])("p",null,[V,Object(l["j"])(j["a"],null,{default:Object(l["L"])(()=>[X]),_:1}),Z,Object(l["j"])(j["a"],null,{default:Object(l["L"])(()=>[ee]),_:1}),te,Object(l["j"])(j["a"],null,{default:Object(l["L"])(()=>[ce]),_:1}),le]),ae,Object(l["j"])(O["a"]),Object(l["g"])("ul",se,[Object(l["g"])("li",be,[Object(l["j"])(u["a"]),Object(l["g"])("p",null,[je,Object(l["j"])(j["a"],null,{default:Object(l["L"])(()=>[ne]),_:1}),Oe])]),Object(l["g"])("li",ue,[Object(l["j"])(u["a"]),Object(l["g"])("p",null,[Object(l["j"])(j["a"],null,{default:Object(l["L"])(()=>[ie]),_:1}),re,Object(l["j"])(j["a"],null,{default:Object(l["L"])(()=>[oe]),_:1}),pe])]),Object(l["g"])("li",de,[Object(l["j"])(u["a"]),Object(l["g"])("p",null,[Object(l["j"])(j["a"],null,{default:Object(l["L"])(()=>[ge]),_:1}),fe])]),Object(l["g"])("li",he,[Object(l["j"])(u["a"]),Object(l["g"])("p",null,[Object(l["j"])(j["a"],null,{default:Object(l["L"])(()=>[me]),_:1}),we])]),Object(l["g"])("li",ve,[Object(l["j"])(u["a"]),Object(l["g"])("p",null,[_e,Object(l["j"])(j["a"],null,{default:Object(l["L"])(()=>[ke]),_:1}),Le])])])]),_:1})],512),Object(l["j"])(n["a"],{onResizeWidth:c})])]))}};const Ce=ye;t["default"]=Ce},d512:function(e,t,c){"use strict";var l=c("7a23");const a={class:"comment"};function s(e,t){return Object(l["v"])(),Object(l["f"])("div",a,[Object(l["g"])("span",null,[Object(l["C"])(e.$slots,"default",{},void 0,!0)])])}c("dbcc");var b=c("6b0d"),j=c.n(b);const n={},O=j()(n,[["render",s],["__scopeId","data-v-358fd9c6"]]);t["a"]=O},dbcc:function(e,t,c){"use strict";c("4f87")}}]);
//# sourceMappingURL=chunk-2aa4029b.d730cc7c.js.map