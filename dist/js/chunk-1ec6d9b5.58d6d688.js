(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-1ec6d9b5"],{1755:function(e,t,c){"use strict";c.r(t);var a=c("7a23"),l=c("d512"),s=c("db86"),b=c("85eb"),j=c("ae20"),n=c("7801"),O=c("567f"),u=c("8174");const i={class:"test-case"},p={class:"screen-divide"},r=Object(a["g"])("h1",null,"Use Destructuring Assignment to Assign Variables from Arrays",-1),d=Object(a["g"])("p",null," ES6 makes destructuring arrays as easy as destructuring objects. ",-1),g=Object(a["g"])("p",null," One key difference between the spread operator and array destructuring is that the spread operator unpacks all contents of an array into a comma-separated list. Consequently, you cannot pick or choose which elements you want to assign to variables. ",-1),o=Object(a["g"])("p",null,"Destructuring an array lets us do exactly that:",-1),f=Object(a["g"])("span",{class:"blue"},"const ",-1),h=Object(a["g"])("span",{class:"black"},"[ a, b ] = [ ",-1),v=Object(a["g"])("span",{class:"purple"},"1",-1),_=Object(a["g"])("span",{class:"black"},", ",-1),k=Object(a["g"])("span",{class:"purple"},"2",-1),L=Object(a["g"])("span",{class:"black"},", ",-1),y=Object(a["g"])("span",{class:"purple"},"3",-1),w=Object(a["g"])("span",{class:"black"},", ",-1),m=Object(a["g"])("span",{class:"purple"},"4",-1),x=Object(a["g"])("span",{class:"black"},", ",-1),T=Object(a["g"])("span",{class:"purple"},"5",-1),A=Object(a["g"])("span",{class:"black"},", ",-1),W=Object(a["g"])("span",{class:"purple"},"6",-1),C=Object(a["g"])("span",{class:"black"},"]; ",-1),D=Object(a["g"])("div",{class:"next"},null,-1),J=Object(a["g"])("span",{class:"black"},"console.",-1),R=Object(a["g"])("span",{class:"red"},"log",-1),S=Object(a["g"])("span",{class:"black"},"( a, b );",-1),U=Object(a["i"])(" The console will display the values of "),q=Object(a["i"])("a"),z=Object(a["i"])(" and "),E=Object(a["i"])("b"),I=Object(a["i"])(" as "),V=Object(a["i"])("1, 2"),Y=Object(a["i"])(". "),$=Object(a["i"])(" The variable "),B=Object(a["i"])("a"),F=Object(a["i"])(" is assigned the first value of the array, and "),G=Object(a["i"])("b"),H=Object(a["i"])(" is assigned the second value of the array. We can also access the value at any index in an array with destructuring by using commas to reach the desired index: "),K=Object(a["g"])("span",{class:"blue"},"const ",-1),M=Object(a["g"])("span",{class:"black"},"[ a, b, , , c ] = [ ",-1),N=Object(a["g"])("span",{class:"purple"},"1",-1),P=Object(a["g"])("span",{class:"black"},", ",-1),Q=Object(a["g"])("span",{class:"purple"},"2",-1),X=Object(a["g"])("span",{class:"black"},", ",-1),Z=Object(a["g"])("span",{class:"purple"},"3",-1),ee=Object(a["g"])("span",{class:"black"},", ",-1),te=Object(a["g"])("span",{class:"purple"},"4",-1),ce=Object(a["g"])("span",{class:"black"},", ",-1),ae=Object(a["g"])("span",{class:"purple"},"5",-1),le=Object(a["g"])("span",{class:"black"},", ",-1),se=Object(a["g"])("span",{class:"purple"},"6",-1),be=Object(a["g"])("span",{class:"black"},"]; ",-1),je=Object(a["g"])("div",{class:"next"},null,-1),ne=Object(a["g"])("span",{class:"black"},"console.",-1),Oe=Object(a["g"])("span",{class:"red"},"log",-1),ue=Object(a["g"])("span",{class:"black"},"( a, b, c );",-1),ie=Object(a["i"])(" The console will display the values of "),pe=Object(a["i"])("a"),re=Object(a["i"])(", "),de=Object(a["i"])("b"),ge=Object(a["i"])(", and "),oe=Object(a["i"])("c"),fe=Object(a["i"])(" as "),he=Object(a["i"])("1, 2, 5"),ve=Object(a["i"])(". "),_e=Object(a["g"])("hr",null,null,-1),ke=Object(a["i"])(" Use destructuring assignment to swap the values of "),Le=Object(a["i"])("a"),ye=Object(a["i"])(" and "),we=Object(a["i"])("b"),me=Object(a["i"])(" so that "),xe=Object(a["i"])("a"),Te=Object(a["i"])(" receives the value stored in "),Ae=Object(a["i"])("b"),We=Object(a["i"])(", and "),Ce=Object(a["i"])("b"),De=Object(a["i"])(" receives the value stored in "),Je=Object(a["i"])("a"),Re=Object(a["i"])(". "),Se=Object(a["g"])("hr",null,null,-1),Ue={class:"tests"},qe={class:"test"},ze=Object(a["i"])(" The value of "),Ee=Object(a["i"])("a"),Ie=Object(a["i"])(" should be "),Ve=Object(a["i"])("6"),Ye=Object(a["i"])(", after swapping. "),$e={class:"test"},Be=Object(a["i"])(" The value of "),Fe=Object(a["i"])("b"),Ge=Object(a["i"])(" should be "),He=Object(a["i"])("8"),Ke=Object(a["i"])(", after swapping. "),Me={class:"test"},Ne=Object(a["i"])(" You should use array destructuring to swap "),Pe=Object(a["i"])("a"),Qe=Object(a["i"])(" and "),Xe=Object(a["i"])("b"),Ze=Object(a["i"])(". ");var et={setup(e){const t=Object(a["A"])();function c(e){let c=window.innerWidth-e-30;t.value.style.width=c+"px"}return(e,et)=>(Object(a["v"])(),Object(a["f"])("div",i,[Object(a["j"])(s["a"]),Object(a["g"])("div",p,[Object(a["g"])("div",{class:"left-screen",ref_key:"leftScreenRef",ref:t},[Object(a["j"])(b["a"],null,{default:Object(a["L"])(()=>[r,d,g,o,Object(a["j"])(l["a"],null,{default:Object(a["L"])(()=>[f,h,v,_,k,L,y,w,m,x,T,A,W,C,D,J,R,S]),_:1}),Object(a["g"])("p",null,[U,Object(a["j"])(j["a"],null,{default:Object(a["L"])(()=>[q]),_:1}),z,Object(a["j"])(j["a"],null,{default:Object(a["L"])(()=>[E]),_:1}),I,Object(a["j"])(j["a"],null,{default:Object(a["L"])(()=>[V]),_:1}),Y]),Object(a["g"])("p",null,[$,Object(a["j"])(j["a"],null,{default:Object(a["L"])(()=>[B]),_:1}),F,Object(a["j"])(j["a"],null,{default:Object(a["L"])(()=>[G]),_:1}),H]),Object(a["j"])(l["a"],null,{default:Object(a["L"])(()=>[K,M,N,P,Q,X,Z,ee,te,ce,ae,le,se,be,je,ne,Oe,ue]),_:1}),Object(a["g"])("p",null,[ie,Object(a["j"])(j["a"],null,{default:Object(a["L"])(()=>[pe]),_:1}),re,Object(a["j"])(j["a"],null,{default:Object(a["L"])(()=>[de]),_:1}),ge,Object(a["j"])(j["a"],null,{default:Object(a["L"])(()=>[oe]),_:1}),fe,Object(a["j"])(j["a"],null,{default:Object(a["L"])(()=>[he]),_:1}),ve]),_e,Object(a["g"])("p",null,[ke,Object(a["j"])(j["a"],null,{default:Object(a["L"])(()=>[Le]),_:1}),ye,Object(a["j"])(j["a"],null,{default:Object(a["L"])(()=>[we]),_:1}),me,Object(a["j"])(j["a"],null,{default:Object(a["L"])(()=>[xe]),_:1}),Te,Object(a["j"])(j["a"],null,{default:Object(a["L"])(()=>[Ae]),_:1}),We,Object(a["j"])(j["a"],null,{default:Object(a["L"])(()=>[Ce]),_:1}),De,Object(a["j"])(j["a"],null,{default:Object(a["L"])(()=>[Je]),_:1}),Re]),Se,Object(a["j"])(O["a"]),Object(a["g"])("ul",Ue,[Object(a["g"])("li",qe,[Object(a["j"])(u["a"]),Object(a["g"])("p",null,[ze,Object(a["j"])(j["a"],null,{default:Object(a["L"])(()=>[Ee]),_:1}),Ie,Object(a["j"])(j["a"],null,{default:Object(a["L"])(()=>[Ve]),_:1}),Ye])]),Object(a["g"])("li",$e,[Object(a["j"])(u["a"]),Object(a["g"])("p",null,[Be,Object(a["j"])(j["a"],null,{default:Object(a["L"])(()=>[Fe]),_:1}),Ge,Object(a["j"])(j["a"],null,{default:Object(a["L"])(()=>[He]),_:1}),Ke])]),Object(a["g"])("li",Me,[Object(a["j"])(u["a"]),Object(a["g"])("p",null,[Ne,Object(a["j"])(j["a"],null,{default:Object(a["L"])(()=>[Pe]),_:1}),Qe,Object(a["j"])(j["a"],null,{default:Object(a["L"])(()=>[Xe]),_:1}),Ze])])])]),_:1})],512),Object(a["j"])(n["a"],{onResizeWidth:c})])]))}};const tt=et;t["default"]=tt},"4f87":function(e,t,c){},d512:function(e,t,c){"use strict";var a=c("7a23");const l={class:"comment"};function s(e,t){return Object(a["v"])(),Object(a["f"])("div",l,[Object(a["g"])("span",null,[Object(a["C"])(e.$slots,"default",{},void 0,!0)])])}c("dbcc");var b=c("6b0d"),j=c.n(b);const n={},O=j()(n,[["render",s],["__scopeId","data-v-358fd9c6"]]);t["a"]=O},dbcc:function(e,t,c){"use strict";c("4f87")}}]);
//# sourceMappingURL=chunk-1ec6d9b5.58d6d688.js.map