{"version":3,"sources":["webpack:///./src/views/regex/match-a-literal-string-with-different-possibilities.vue","webpack:///./src/views/regex/match-a-literal-string-with-different-possibilities.vue?b9fe"],"names":["leftScreenRef","ref","changeWidth","n","size","window","innerWidth","value","style","width","__exports__"],"mappings":"i+GA4GA,MAAMA,EAAgBC,iBAEtB,SAASC,EAAYC,GACnB,IAAIC,EAAOC,OAAOC,WAAaH,EAAI,GACnCH,EAAcO,MAAMC,MAAMC,MAAQL,EAAO,K,88GC7G3C,MAAMM,GAAc,GAEL","file":"js/chunk-2d0b25d5.28c2c7dc.js","sourcesContent":["<template>\r\n  <div class=\"test-case\">\r\n    <Navigation />\r\n    <div class=\"screen-divide\">\r\n      <div class=\"left-screen\" ref=\"leftScreenRef\">\r\n        <LeftScreen>\r\n          <h1>Match a Literal String with Different Possibilities</h1>\r\n          <p>\r\n            Using regexes like <Code>/coding/</Code>, you can look for the\r\n            pattern <Code>coding</Code> in another string.\r\n          </p>\r\n          <p>\r\n            This is powerful to search single strings, but it's limited to only\r\n            one pattern. You can search for multiple patterns using the\r\n            <Code>alternation</Code> or <Code>OR</Code> operator:\r\n            <Code>|</Code>.\r\n          </p>\r\n          <p>\r\n            This operator matches patterns either before or after it. For\r\n            example, if you wanted to match the strings <Code>yes</Code> or\r\n            <Code>no</Code>, the regex you want is <Code>/yes|no/</Code>.\r\n          </p>\r\n          <p>\r\n            You can also search for more than just two patterns. You can do this\r\n            by adding more patterns with more <Code>OR</Code> operators\r\n            separating them, like <Code>/yes|no|maybe/</Code>.\r\n          </p>\r\n          <hr />\r\n          <p>\r\n            Complete the regex <Code>petRegex</Code> to match the pets\r\n            <Code>dog</Code>, <Code>cat</Code>, <Code>bird</Code>, or\r\n            <Code>fish</Code>.\r\n          </p>\r\n          <hr />\r\n          <tests />\r\n          <ul class=\"tests\">\r\n            <li class=\"test\">\r\n              <tests-initial />\r\n              <p>\r\n                Your regex <Code>petRegex</Code> should return\r\n                <Code>true</Code> for the string\r\n                <Code>John has a pet dog</Code>.\r\n              </p>\r\n            </li>\r\n            <li class=\"test\">\r\n              <tests-initial />\r\n              <p>\r\n                Your regex <Code>petRegex</Code> should return\r\n                <Code>false</Code> for the string\r\n                <Code>Emma has a pet rock</Code>.\r\n              </p>\r\n            </li>\r\n            <li class=\"test\">\r\n              <tests-initial />\r\n              <p>\r\n                Your regex <Code>petRegex</Code> should return\r\n                <Code>true</Code> for the string\r\n                <Code>Emma has a pet bird</Code>.\r\n              </p>\r\n            </li>\r\n            <li class=\"test\">\r\n              <tests-initial />\r\n              <p>\r\n                Your regex <Code>petRegex</Code> should return\r\n                <Code>true</Code> for the string\r\n                <Code>Emma has a pet cat</Code>.\r\n              </p>\r\n            </li>\r\n            <li class=\"test\">\r\n              <tests-initial />\r\n              <p>\r\n                Your regex <Code>petRegex</Code> should return\r\n                <Code>false</Code> for the string\r\n                <Code>Kara has a pet dolphin</Code>.\r\n              </p>\r\n            </li>\r\n            <li class=\"test\">\r\n              <tests-initial />\r\n              <p>\r\n                Your regex <Code>petRegex</Code> should return\r\n                <Code>true</Code> for the string\r\n                <Code>Alice has a pet fish</Code>.\r\n              </p>\r\n            </li>\r\n            <li class=\"test\">\r\n              <tests-initial />\r\n              <p>\r\n                Your regex <Code>petRegex</Code> should return\r\n                <Code>false</Code> for the string\r\n                <Code>Jimmy has a pet computer</Code>.\r\n              </p>\r\n            </li>\r\n          </ul>\r\n        </LeftScreen>\r\n      </div>\r\n      <RightScreen @resize-width=\"changeWidth\"> </RightScreen>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport Navigation from \"@/components/util-components/navigation.vue\";\r\nimport LeftScreen from \"@/components/util-components/left-screen.vue\";\r\nimport Code from \"@/components/util-components/code.vue\";\r\nimport RightScreen from \"@/components/util-components/right-screen.vue\";\r\nimport Tests from \"@/components/util-components/tests.vue\";\r\nimport testsInitial from \"@/components/util-components/svg-components/tests-initial.vue\";\r\nimport { ref } from \"vue\";\r\nconst leftScreenRef = ref();\r\n\r\nfunction changeWidth(n) {\r\n  let size = window.innerWidth - n - 30;\r\n  leftScreenRef.value.style.width = size + \"px\";\r\n}\r\n</script>\r\n","import script from \"./match-a-literal-string-with-different-possibilities.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./match-a-literal-string-with-different-possibilities.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"sourceRoot":""}