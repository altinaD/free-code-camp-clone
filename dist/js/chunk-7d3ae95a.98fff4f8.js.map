{"version":3,"sources":["webpack:///./src/views/es6/handle-a-fulfilled-promise-with-then.vue","webpack:///./src/views/es6/handle-a-fulfilled-promise-with-then.vue?01bb","webpack:///./src/components/util-components/comment.vue","webpack:///./src/components/util-components/comment.vue?47ad","webpack:///./src/components/util-components/comment.vue?ebee"],"names":["leftScreenRef","ref","changeWidth","n","size","window","innerWidth","value","style","width","__exports__","class","_createElementBlock","_hoisted_1","_createElementVNode","_renderSlot","_ctx","$slots","undefined","script","render"],"mappings":"gtEA2EA,MAAMA,EAAgBC,iBAEtB,SAASC,EAAYC,GACnB,IAAIC,EAAOC,OAAOC,WAAaH,EAAI,GACnCH,EAAcO,MAAMC,MAAMC,MAAQL,EAAO,K,shDC5E3C,MAAMM,GAAc,GAEL,iB,2DCJRC,MAAM,W,wCAAXC,eAEM,MAFNC,EAEM,CADJC,eAA2B,aAApBC,eAAaC,EAAAC,OAAA,kBAAAC,GAAA,O,mCCDxB,MAAMC,EAAS,GAKTT,EAA2B,IAAgBS,EAAQ,CAAC,CAAC,SAASC,GAAQ,CAAC,YAAY,qBAE1E,U,kCCRf","file":"js/chunk-7d3ae95a.98fff4f8.js","sourcesContent":["<template>\r\n  <div class=\"test-case\">\r\n    <Navigation />\r\n    <div class=\"screen-divide\">\r\n      <div class=\"left-screen\" ref=\"leftScreenRef\">\r\n        <LeftScreen>\r\n          <h1>Handle a Fulfilled Promise with then</h1>\r\n          <p>\r\n            Promises are most useful when you have a process that takes an\r\n            unknown amount of time in your code (i.e. something asynchronous),\r\n            often a server request. When you make a server request it takes some\r\n            amount of time, and after it completes you usually want to do\r\n            something with the response from the server. This can be achieved by\r\n            using the <Code>then</Code> method. The <Code>then</Code> method is\r\n            executed immediately after your promise is fulfilled with\r\n            <Code>resolve</Code>. Hereâ€™s an example:\r\n          </p>\r\n          <Comment>\r\n            <span class=\"black\">myPromise.</span>\r\n            <span class=\"red\">then</span>\r\n            <span class=\"black\">(result => {</span>\r\n            <div class=\"next\"></div>\r\n            <div class=\"next\"></div>\r\n            <span class=\"black\">});</span>\r\n          </Comment>\r\n          <p>\r\n            <Code>result</Code> comes from the argument given to the\r\n            <Code>resolve</Code> method.\r\n          </p>\r\n          <hr />\r\n          <p>\r\n            Add the <Code>then</Code> method to your promise. Use\r\n            <Code>result</Code> as the parameter of its callback function and\r\n            log <Code>result</Code> to the console.\r\n          </p>\r\n          <hr />\r\n          <tests />\r\n          <ul class=\"tests\">\r\n            <li class=\"test\">\r\n              <tests-initial />\r\n              <p>\r\n                You should call the <Code>then</Code> method on the promise.\r\n              </p>\r\n            </li>\r\n            <li class=\"test\">\r\n              <tests-initial />\r\n              <p>\r\n                Your <Code>then</Code> method should have a callback function\r\n                with <Code>result</Code> as its parameter.\r\n              </p>\r\n            </li>\r\n            <li class=\"test\">\r\n              <tests-initial />\r\n              <p>\r\n                You should log\r\n                <Code>result</Code> to the console.\r\n              </p>\r\n            </li>\r\n          </ul>\r\n        </LeftScreen>\r\n      </div>\r\n      <RightScreen @resize-width=\"changeWidth\"> </RightScreen>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport Comment from \"@/components/util-components/comment.vue\";\r\nimport Navigation from \"@/components/util-components/navigation.vue\";\r\nimport LeftScreen from \"@/components/util-components/left-screen.vue\";\r\nimport Code from \"@/components/util-components/code.vue\";\r\nimport RightScreen from \"@/components/util-components/right-screen.vue\";\r\nimport Tests from \"@/components/util-components/tests.vue\";\r\nimport testsInitial from \"@/components/util-components/svg-components/tests-initial.vue\";\r\nimport { ref } from \"vue\";\r\nconst leftScreenRef = ref();\r\n\r\nfunction changeWidth(n) {\r\n  let size = window.innerWidth - n - 30;\r\n  leftScreenRef.value.style.width = size + \"px\";\r\n}\r\n</script>\r\n","import script from \"./handle-a-fulfilled-promise-with-then.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./handle-a-fulfilled-promise-with-then.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n  <div class=\"comment\">\r\n    <span> <slot></slot></span>\r\n  </div>\r\n</template>\r\n\r\n<style scoped>\r\n.comment {\r\n  background-color: #f5f2f0;\r\n  padding: 1rem;\r\n  width: 100%;\r\n  margin: 15px 0;\r\n  font-size: 1.12rem;\r\n}\r\n</style>\r\n","import { render } from \"./comment.vue?vue&type=template&id=358fd9c6&scoped=true\"\nconst script = {}\n\nimport \"./comment.vue?vue&type=style&index=0&id=358fd9c6&scoped=true&lang=css\"\n\nimport exportComponent from \"E:\\\\Altyn\\\\portfolio\\\\vue3\\\\free-code-camp-clone\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-358fd9c6\"]])\n\nexport default __exports__","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./comment.vue?vue&type=style&index=0&id=358fd9c6&scoped=true&lang=css\""],"sourceRoot":""}